<mxfile host="app.diagrams.net" modified="2022-06-23T01:11:12.018Z" agent="5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.0.0 Safari/537.36" etag="onarBYETKRJQUUizNZFs" version="20.0.1" type="github">
  <diagram id="vp3eEJC1ooQmi3Tdlvl2" name="Page-1">
    <mxGraphModel dx="1248" dy="566" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="1169" pageHeight="827" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-8" value="" style="shape=process;whiteSpace=wrap;html=1;backgroundOutline=1;" vertex="1" parent="1">
          <mxGeometry x="40" y="300" width="630" height="490" as="geometry" />
        </mxCell>
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-1" value="필로소퍼 핵심 정리&lt;br&gt;&amp;nbsp;&lt;br&gt;1. 쓰레드를 따로 만들 준비를 한다.&amp;nbsp;&lt;br&gt;2. 쓰레드 준비 상태가 되면 해당 준비 상태에서 멈춰서 대기하게 만든다.&amp;nbsp;&lt;br&gt;3. 시작 신호와 함께 식사를 시작한다&amp;nbsp;&lt;br&gt;4. 식사 시 로직은&amp;nbsp;&lt;br&gt;4-1) 내 상태를 체크한다.&lt;br&gt;4-2) 내가 쓸 포크가 사용 가능 여부를 판단한다.&amp;nbsp;&lt;br&gt;4-3) 포크가 가능할 시 이를 사용하고, 사용상태로 바꾼다.&amp;nbsp;&lt;br&gt;4-4) 포크가 사용 불가시 잠시 대기 시간을 갖는다.&amp;nbsp;&lt;br&gt;5. 식사 시간을 지키고 죽었는지 아니면 살았는지 점검을 한다.&amp;nbsp;&lt;br&gt;6. 내용들이 초기화되고 초기화 된 상태에서 일부 작업했던 사항들을 초기화 한다.&amp;nbsp;&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;모니터링&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;1.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;뮤텍스 위치&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;&quot;&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="40" y="40" width="440" height="240" as="geometry" />
        </mxCell>
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-2" value="공유자원 풀" style="ellipse;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="280" y="510" width="150" height="120" as="geometry" />
        </mxCell>
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-3" value="Philo1" style="shape=umlActor;verticalLabelPosition=bottom;verticalAlign=top;html=1;outlineConnect=0;" vertex="1" parent="1">
          <mxGeometry x="340" y="380" width="30" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-7" value="Philo2" style="shape=umlActor;verticalLabelPosition=bottom;verticalAlign=top;html=1;outlineConnect=0;" vertex="1" parent="1">
          <mxGeometry x="340" y="670" width="30" height="60" as="geometry" />
        </mxCell>
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-9" value="fork1" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="430" y="430" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-10" value="fork2" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;" vertex="1" parent="1">
          <mxGeometry x="130" y="630" width="120" height="80" as="geometry" />
        </mxCell>
        <mxCell id="IqQ0IIo6DjlI-_bbhryw-11" value="핵심 주요 사항&lt;br&gt;1. 시작을 순차적으로 진행하게 하되, 포크를 먼저 잡는 쪽만 시작을 시키고 그 외에 나머지는 대기 시키는 방법 고안하기&amp;nbsp;&lt;br&gt;2. 출력 시, 대기하도록 만들기&lt;br&gt;3. 포크를 잡는 알고리즘 다시 만들기&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;3-1. 한쪽 잡기 시도&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;3-2. 잡기 성공? -&amp;gt; 다른 한쪽 잡기 시도 -&amp;gt; 이 역시 성공시 식사 아니면 반환&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;	&lt;/span&gt;3-3. 잡기 실패 -&amp;gt; 반환&lt;br&gt;4. 모니터링 방식 고안할 것" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="510" y="40" width="440" height="240" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
