Assignment name			: micro_paint
Expected files			: *.c, *.h
Allowed functions		: fopen, fread, fscanf, fclose, write, malloc, calloc, realloc, free, memset, powf, sqrtf

* * * 

프로그램은 '명령어 파일' 을 읽을 것입니다. 그리곤 터미널 상에서 결과물을 출력합니다. 

당신의 프로그램은 하나의 인자를 받습니다. 이는 '작업 파일'과 그 경로입니다. 만약 인자가 0이나 1보다 큰 경우, 프로그램은 "Error: argument" 라는 에러를 STDOUT 으로 출력하고 개행문자를 출력해줍니다. 

$> ./micro_paint | cat -e
Error: argument$
$> ./micro_paint do not fear mathematics | cat -e
Error: argument$
$> 

만약 '작업 파일'을 읽고 여는데 어떤 문제로라도 문제가 발생하면, "Error: Operation file corrupted" 라는 문구가 STDOUT 으로 개행문자와 함께 출력 합니다. 

'작업 파일'은 라인 당 한개의 작업을 포함하고 있습니다. 
라인이 부정확하면 에러를 발생합니다. 
만약 에러가 발생하면 당신의 프로그램은 반드시 1을 반환해야 합니다. 
만약 에러가 발생하지 않았다면 당신의 프로그램은 0을 반드시 반환합니다. 
마지막 라인은 개행문자가 오거나, 혹은 오지 않을 수 있습니다. 
줄들은 반드시 순서대로 읽혀야 하며, 그러므로 작업도 반드시 동일한 순서로 실행되어야 합니다. 
라인 안에 각 변수들은 사이는 한 칸의 스페이스바가 반드시 존재합니다. 

WIDTH HEIGHT BACKGROUND_CHAR
이 라인은 항상 파일의 제일 처음 옵니다. 그리고 이 라인은 그려야 할 곳의 영역을 정의내립니다. 당신의 프로그램은 해당 그려야 할 영역 밖에 어떠한 것도 출력되어선 안됩니다. 반드시 한 번 해당 영역이 존재해야 합니다. 
- WIDTH				:	정수로 0보다 크며 300과 같거나 작습니다. 그려야 할 존의 크기를 위해 사용될 수평의 문자들의 숫자를 나타냅니다.
- HEIGHT			:	정수로 0보다 크며 300과 같거나 작습니다. 그려야 할 존의 크기를 위해 사용될 수직의 문자들의 숫자를 나타냅니다. 
- BACKGROUND_CHAR	:	빈 공간은 이 변수의 문자로 채워집니다. 

r X Y WIDHT HEIGHT CHAR
이 연산자는 빈 직사각형을 그릴 것입니다. 그려질 직사강형의 경계는 아래 내용을 의미합니다. 
- r			:	문자 r
- X			:	어떤 실수든, 직사각형의 좌 상단 코너의 수평 위치를 의미합니다.
- Y			:	어떤 실수든, 직사각형의 좌 상단 코너의 수직 위치를 의미합니다.
- WIDTH		:	0이 아닌 양의 실수, 직사각형의 너비를 의미합니다.
- HEIGHT	:	0이 아닌 양의 실수, 직사각형의 높이를 의미합니다.
- CHAR		:	직 사각형을 그릴 때 사용되는 문자.

R X Y WIDTH HEIGHT CHAR
이 연산자는 채워진 직 사각형을 그립니다. 
- R			:	문자 R 
- X			:	어떤 실수든, 직사각형의 좌 상단 코너의 수평 위치를 나타냅니다.
- Y			:	어떤 실수든, 직사각형의 좌 상단 코너의 수직 위치를 의미합니다.
- WIDHT		:	0이 아닌 양의 실수, 직사각형의 너비를 의미합니다.
- HEIGHT	:	0이 아닌 양의 실수, 직사각형의 높이를 의미합니다. 
- CHAR		:	직사각형을 그리기 

그리는 영역은 각각 하나의 글자를 포함할 수 있는 직사각형으로 나눠집니다. 우리는 이들을 픽셀이라고 여길 것입니다. 
모든 것을 더 쉽게 만들기 위해, 우리는 
